plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion libs.versions.compilesdk.get().toInteger()

    defaultConfig {
        applicationId "dev.sanson.donezo"
        minSdkVersion libs.versions.minsdk.get().toInteger()
        targetSdkVersion libs.versions.targetsdk.get().toInteger()

        versionCode libs.versions.versioncode.get().toInteger()
        versionName libs.versions.app.get()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // Allow local, unsigned release builds
            if (!rootProject.file("keystore/").exists()) {
                return
            }

            def keystorePropertiesFile = rootProject.file("keystore.properties")
            def keystoreProperties = new Properties()

            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile rootProject.file("keystore/keystore.jks")
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
        }

        debug {
            storeFile rootProject.file("debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (rootProject.file("keystore/").exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }

        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'

            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
        useLiveLiterals true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
        exclude 'plugin.properties'
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn"
        ]
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation libs.androidx.core
    implementation libs.appcompat
    implementation libs.material
    implementation libs.bundles.lifecycle

    implementation libs.bundles.compose
    implementation libs.activity.compose

    implementation libs.datastore

    implementation project(":todo")
    implementation project(":git")
}
